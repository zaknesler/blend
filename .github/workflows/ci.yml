name: CI
on:
  push:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
  NODE_VERSION: 21.x
  DATABASE_URL: sqlite:blend.db

jobs:
  ci:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - name: linux-gnu-x86_64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v4

      - name: Check for typos
        uses: crate-ci/typos@master

      - name: Setup Biome
        uses: biomejs/setup-biome@v2
        with:
          version: latest

      - name: Install Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        id: pnpm-install
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Configure pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ matrix.target }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ matrix.target }}-pnpm-store-

      - name: Create empty dist directory
        run: mkdir $GITHUB_WORKSPACE/ui/dist
        shell: bash

      - name: Configure Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "${{ matrix.target }}"

      - name: Configure Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-binstall
        run: curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
        shell: bash

      - run: cargo binstall --no-confirm --force sqlx-cli
      - run: cargo binstall --no-confirm --force typeshare-cli
      - run: sqlx db create
      - run: sqlx migrate run --source crates/blend-db/migrations
      - run: cargo test --verbose --workspace

      - run: pnpm install
      - run: pnpm run ci
      - run: pnpm run typeshare:generate
      - run: pnpm run test:cov
      - run: pnpm run build
